# 导入库
import sys

from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *

# 这里是全局变量：学生信息
USER_PWD = {
    '11': '3'
}

# 输入信息界面【1】
## 将输入的信息储存备用，确定跳转dialog
class Hello(QWidget):
    def __init__(self):
        super().__init__()
        self.resize(500, 300)
        self.user_label = QLabel('姓名:', self)
        self.cla_label = QLabel('班级:', self)
        self.where_label = QLabel('座位号:', self)
        self.where_line = QLineEdit(self)
        self.user_line = QLineEdit(self)
        self.cla_line = QLineEdit(self)
        self.login_button = QPushButton('确定', self)
        self.tips_label = QLabel('    请在下面方框内对应输入自己的班级、姓名、座位号，填完之后点击“确定”进入下面的小游戏~', self)

        self.grid_layout = QGridLayout()
        self.v1_layout = QVBoxLayout()
        self.v2_layout = QVBoxLayout()

        self.lineedit_init()
        self.pushbutton_init()
        self.layout_init()

    def layout_init(self):
        self.grid_layout.addWidget(self.user_label, 0, 0, 1, 1)
        self.grid_layout.addWidget(self.user_line, 0, 1, 1, 1)
        self.grid_layout.addWidget(self.cla_label, 1, 0, 1, 1)
        self.grid_layout.addWidget(self.cla_line, 1, 1, 1, 1)
        self.grid_layout.addWidget(self.where_label, 2, 0, 1, 1)
        self.grid_layout.addWidget(self.where_line, 2, 1, 1, 1)

        self.v2_layout.addWidget(self.tips_label)
        self.v2_layout.addLayout(self.grid_layout)
        self.v2_layout.addWidget(self.login_button)

        self.setLayout(self.v2_layout)

    def lineedit_init(self):
        self.user_line.setPlaceholderText('请输入你的名字')
        self.cla_line.setPlaceholderText('请输入你的班级')
        self.where_line.setPlaceholderText('请输入你的座位号')

        self.user_line.textChanged.connect(self.check_input_func)
        self.cla_line.textChanged.connect(self.check_input_func)
        self.where_line.textChanged.connect(self.check_input_func)

    def pushbutton_init(self):
        self.login_button.setEnabled(False)
        self.login_button.clicked.connect(self.check_login_func)

    # 检查信息是否有误
    ## 后续加上抛出输入信息的信号；姓名-班级&姓名-座号核对（如无重名）
    def check_login_func(self):
        if USER_PWD.get(self.user_line.text()) == self.cla_line.text():
            self.w2 = Tips4()
            self.w2.show()
            self.close()
        else:
            QMessageBox.critical(self, '错误', '输入有误，请重新输入')

            self.user_line.clear()
            self.cla_line.clear()
            self.where_line.clear()

    # 如果输入有误，确定键一直不可点击
    def check_input_func(self):
        if self.user_line.text() and self.cla_line.text() and self.where_line.text():
            self.login_button.setEnabled(True)
        else:
            self.login_button.setEnabled(False)


# 温馨提示语句dialog【2】
## 点击重设Qlabel * 4
class Tips4(QDialog):
    def __init__(self):
        super().__init__()
        self.resize(500, 300)
        self.tips_label = QLabel(' ', self)
        self.i = 0
        self.txt = ['亲爱的同学，欢迎你参加这个小游戏！', '这个游戏没有对错之分，请根据你的第一感觉去完成！', '我们将对你创作的结果予以严格保密哟！请放心作答哦~', '接下来，要注意看啦！看清楚之后，请点击“确定”键。']
        self.time = QTimer(self)
        self.time.timeout.connect(self.I)
        self.I()


    def I(self):
        if self.i<4:
            self.tips_label.setText(self.txt[self.i])
            self.i += 1
            self.time.start(700)
        else:
            self.time.disconnect()
            self.w3 = Material()
            self.w3.show()
            self.close()


# 素材框窗口【3】
##
class Material(QWidget):
    def __init__(self):
        super().__init__()
        self.resize(500, 300)
        self.i = 0
        self.txt = ['这是一个房间', '这代表人', '人的个数可以无限拖拉']
        self.adress1 = ['Scripts/ico.png', 'Scripts/ico.png', 'Scripts/ico.png']
        self.pic_label = QLabel(self)
        self.tips_label = QLabel(' ', self)
        self.btn = QPushButton('确定', self)
        self.btn.clicked.connect(self.I)
        self.I()

    def I(self):
        if self.i<3:
            self.im = QPixmap(self.adress1[self.i])
            self.pic_label.setPixmap(self.im)
            self.tips_label.setText(self.txt[self.i])
            self.i += 1
        else:
            self.btn.disconnect()
            self.w4 = Painter()
            self.w4.show()
            self.close()


# 这是最重要的那个窗口【4】
## 关闭该窗口后打开【3】
class Painter(QWidget):

    def __init__(self):
        super().__init__()
        self.initUI()
        self.setGeometry(300, 300, 280, 150)

    def initUI(self):
        h = 0


    def dragEnterEvent(self, e):
        e.accept()

    def dropEvent(self, e):
        btn = e.source()
        position = e.pos()
        btn.move(position)
        e.setDropAction(Qt.CopyAction)
        e.accept()

#
if __name__ == '__main__':
    app = QApplication(sys.argv)
    app.setWindowIcon(QIcon('Scripts/ico.png'))
    #app.setWindowTitle('闽南师范大学')
    w1 = Hello()
    w1.show()
    app.exec_()
